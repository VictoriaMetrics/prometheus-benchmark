{{ range $rsName, $rs := .Values.remoteStorages }}
{{ range $replica := until ($.Values.writeReplicas | default 1 | int) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-benchmark.fullname" $ }}-vmagent-{{ $rsName }}-replica-{{ $replica }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "prometheus-benchmark.labels" $ | nindent 4 }}
spec:
  selector:
    matchLabels:
      job: vmagent
      remote-storage-name: {{ $rsName | quote }}
      {{- include "prometheus-benchmark.selectorLabels" $ | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/nginx-cm: {{ include (print $.Template.BasePath "/vmagent/nginx-cm.yaml") $ | sha256sum }}
      labels:
        job: vmagent
        remote-storage-name: {{ $rsName | quote }}
        {{- include "prometheus-benchmark.labels" $ | nindent 8 }}
    spec:
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: vmagent-config-updater
        image: "victoriametrics/vmagent-config-updater:v1.1.0"
        args:
        - --httpListenAddr=:8436
        - --targetsCount={{ $.Values.targetsCount }}
        - --targetAddr=0.0.0.0:9102
        - --scrapeInterval={{ $.Values.scrapeInterval }}
        - --scrapeConfigUpdatePercent={{ $.Values.scrapeConfigUpdatePercent }}
        - --scrapeConfigUpdateInterval={{ $.Values.scrapeConfigUpdateInterval }}
      - name: vmagent
        resources:
          requests:
            cpu: {{ $.Values.writeReplicaCPU }}
            memory: {{ $.Values.writeReplicaMem }}
          limits:
            memory: {{ $.Values.writeReplicaMem }}
        image: "victoriametrics/vmagent:{{ $.Values.vmtag }}"
        args:
        - --httpListenAddr=:8429
        - --remoteWrite.showURL
        - --promscrape.config=http://0.0.0.0:8436/api/v1/config
        - --promscrape.configCheckInterval={{ $.Values.scrapeConfigUpdateInterval }}
        {{- range $urlReplica := until ($rs.writeURLReplicas | default 1 | int) }}
        - --remoteWrite.url={{ $rs.writeURL }}?extra_label=url_replica={{ $urlReplica }}
        {{- end }}
        - --remoteWrite.tmpDataPath=/vmagent-data
        - --remoteWrite.maxDiskUsagePerURL=100MiB
        {{- if $.Values.writeConcurrency }}
        - --remoteWrite.queues={{ $.Values.writeConcurrency }}
        {{- end }}
        - --remoteWrite.label=replica={{ $replica }}
        - --promscrape.disableCompression
        - --promscrape.noStaleMarkers
        {{- if $rs.writeBearerToken }}
        - --remoteWrite.bearerToken={{ $rs.writeBearerToken }}
        {{- end }}
        {{- if $rs.writeHeaders }}
        - --remoteWrite.headers={{ $rs.writeHeaders }}
        {{- end }}
        {{- range $rs.vmagentExtraFlags }}
        - {{ . }}
        {{- end }}
        {{- with $rs.vmagentExtraEnvs }}
        env:
        {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        - name: metrics
          containerPort: 8429
        volumeMounts:
        - mountPath: /vmagent-data
          name: vmagent-data
      - name: nodeexporter
        image: prom/node-exporter:v1.4.0
        args:
          - --path.procfs=/host/proc
          - --path.sysfs=/host/sys
          - --path.rootfs=/host/root
          # When disabling a collector make sure its metrics aren't used
          # in alerting rules (chart/files/alerts.yaml)
          - --no-collector.wifi
          - --no-collector.arp
          - --collector.processes
          - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+|run/containerd/.+|home/kubernetes/.+)($|/)
          - --web.max-requests=40
          - --web.listen-address=:9101
        volumeMounts:
          - name: proc
            mountPath: /host/proc
            readOnly: true
          - name: sys
            mountPath: /host/sys
            readOnly: true
          - name: root
            mountPath: /host/root
            mountPropagation: HostToContainer
            readOnly: true
        ports:
          - containerPort: 9101
            name: metrics
      - name: nginx
        image: nginx:1.23.1
        args:
          - nginx
          - -c
          - /opt/nginx/nginx.conf
        ports:
          - containerPort: 9102
            name: nginx
        volumeMounts:
          - mountPath: /opt/nginx
            name: nginx-cm
          - mountPath: /tmp/nginx
            name: nginx-cache
          - mountPath: /etc/nginx
            name: nginx-empty
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      volumes:
      - name: vmagent-data
        emptyDir:
          medium: Memory
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: root
        hostPath:
          path: /
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-cm
        configMap:
          name: {{ include "prometheus-benchmark.fullname" $ }}-nginx-cm
      - name: nginx-empty
        emptyDir: {}
---
{{ end }}
{{ end }}
